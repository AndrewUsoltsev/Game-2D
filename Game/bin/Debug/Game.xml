<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Game</name>
    </assembly>
    <members>
        <member name="T:Game.Enums.Direction">
            <summary>
            Направление
            </summary>
        </member>
        <member name="F:Game.Enums.Direction.UP">
            <summary>
            Вверх
            </summary>
        </member>
        <member name="F:Game.Enums.Direction.DOWN">
            <summary>
            Вниз
            </summary>
        </member>
        <member name="F:Game.Enums.Direction.LEFT">
            <summary>
            Вправо
            </summary>
        </member>
        <member name="F:Game.Enums.Direction.RIGHT">
            <summary>
            Влево
            </summary>
        </member>
        <member name="F:Game.Enums.Direction.UpperRightCorner">
            <summary>
            Верхний правый угол
            </summary>
        </member>
        <member name="F:Game.Enums.Direction.OTHER">
            <summary>
            Остальные направления
            </summary>
        </member>
        <member name="T:Game.Enums.Textures">
            <summary>
            Обозначния текстур
            </summary>
        </member>
        <member name="F:Game.Enums.Textures.Block">
            <summary>
            Препятствие
            </summary>
        </member>
        <member name="F:Game.Enums.Textures.TransparentCharacter">
            <summary>
            Персонаж прозрачный
            </summary>
        </member>
        <member name="F:Game.Enums.Textures.CurrentCharactert">
            <summary>
            Персонаж текущий
            </summary>
        </member>
        <member name="F:Game.Enums.Textures.Toarch">
            <summary>
            Факел
            </summary>
        </member>
        <member name="F:Game.Enums.Textures.GrassDay">
            <summary>
            Трава Днем
            </summary>
        </member>
        <member name="F:Game.Enums.Textures.GrassNight">
            <summary>
            Трава Ночью
            </summary>
        </member>
        <member name="T:Game.Enums.TypeOfCell">
            <summary>
            Тип клетки
            </summary>
        </member>
        <member name="F:Game.Enums.TypeOfCell.Block1">
            <summary>
            Препятствие, расположенное по краям карты
            </summary>
        </member>
        <member name="F:Game.Enums.TypeOfCell.Block2">
            <summary>
            Внутренние препятствия карты
            </summary>
        </member>
        <member name="F:Game.Enums.TypeOfCell.Lamp">
            <summary>
            Факел
            </summary>
        </member>
        <member name="F:Game.Enums.TypeOfCell.Free">
            <summary>
            Свободная клетка
            </summary>
        </member>
        <member name="F:Game.Enums.TypeOfCell.Finish">
            <summary>
            Финишная клетка
            </summary>
        </member>
        <member name="T:Game.Extension.GameRendering">
            <summary>
            Класс расширения
            Отрисовка объектов
            </summary>
        </member>
        <member name="F:Game.Extension.GameRendering.mGlTextureObject0">
            <summary>
            Блок препятствие
            </summary>
        </member>
        <member name="F:Game.Extension.GameRendering.mGlTextureObject1">
            <summary>
            Прозрачный персонаж 
            </summary>
        </member>
        <member name="F:Game.Extension.GameRendering.mGlTextureObject2">
            <summary>
            Текущий персонаж 
            </summary>
        </member>
        <member name="F:Game.Extension.GameRendering.mGlTextureObject3">
            <summary>
            Факел
            </summary>
        </member>
        <member name="F:Game.Extension.GameRendering.mGlTextureObject4">
            <summary>
            Трава днем
            </summary>
        </member>
        <member name="F:Game.Extension.GameRendering.mGlTextureObject5">
            <summary>
            Трава ночью
            </summary>
        </member>
        <member name="F:Game.Extension.GameRendering.textureIsLoad">
            <summary>
            Загружена ли текстура
            </summary>
        </member>
        <member name="M:Game.Extension.GameRendering.RenderNet(Game.Models.Net,System.Drawing.Point,Tao.Platform.Windows.SimpleOpenGlControl,System.Int32,System.Boolean)">
            <summary>
            Отрисовка сетки и ячеек в сетке 
            </summary>
            <param name="net">Отрисовываемая сетка</param>
            <param name="first">Начальное положение отрисовываемой части сетки</param>
            <param name="Scene">Графическая область для отрисовки</param>
            <param name="scale">Масштаб сетки</param>
            <param name="isNigth">Текущее время суток (true — ночь, false — день)</param>
        </member>
        <member name="M:Game.Extension.GameRendering.GraphPointToAlgorithmPoint(System.Int32,System.Int32)">
            <summary>
            Перевод графической точки в точку на алгоритмической сетке
            </summary>
            <param name="x">Абсцисса точки</param>
            <param name="y">Ордината точки</param>
            <returns></returns>
        </member>
        <member name="M:Game.Extension.GameRendering.RenderField(Tao.Platform.Windows.SimpleOpenGlControl,System.Boolean)">
            <summary>
            отрисовка поля по всей области
            </summary>
            <param name="Scene">области отрисовки</param>
            <param name="isNigth">текущее время суток (true — ночь, false — день)</param>
        </member>
        <member name="M:Game.Extension.GameRendering.RenderMouseClickGraphPoint(System.Int32,System.Int32,Game.Enums.Textures)">
            <summary>
            Отрисовка клетки, куда было произведено нажатие мыши, 
            </summary>
            <param name="x">Абсцисса точки</param>
            <param name="y">Ордината точки</param>
            <param name="type">Тип отрисовываемой текстуры</param>
            <returns>Возвращается точка на алгоритмической сетки</returns>
        </member>
        <member name="M:Game.Extension.GameRendering.RenderMouseClickAlgorithmPoint(System.Int32,System.Int32,Game.Enums.Textures)">
            <summary>
            Отрисовка клетки, куда было произведено нажатие мыши, на алгоритмической сетке 
            </summary>
            <param name="x">Абсцисса точки</param>
            <param name="y">Ордината точки</param>
            <param name="type">Тип отрисовываемой текстуры</param>
        </member>
        <member name="M:Game.Extension.GameRendering.RenderFinishSquareGraphPoint(System.Drawing.Point)">
            <summary>
            Отрисовка финишной клетки
            </summary>
            <param name="begin">Координаты финишной клетки</param>
        </member>
        <member name="M:Game.Extension.GameRendering.RenderLampAndLightGraphPoint(System.Drawing.Point,Game.Enums.Textures)">
            <summary>
            Отрисовка факела
            </summary>
            <param name="beginGraph">Начальное положение отрисовки (графические координаты)</param>
            <param name="type">Тип отрисовываемой текстуры</param>
        </member>
        <member name="M:Game.Extension.GameRendering.RenderWayByAlgorithmPoint(System.Collections.Generic.List{System.Drawing.Point})">
            <summary>
            Отрисовка пути через центры ячеек пути
            </summary>
            <param name="way">Путь, который необходимо отрисовать</param>
        </member>
        <member name="M:Game.Extension.GameRendering.RenderLineBetweenCell(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Отрисовка линии между соседними ячейками
            Для использования требуются координаты "алгоритмической" сетки (не пиксельные)
            </summary>
            <param name="begin">Исходная ячейка, из которой должны провести линию</param>
            <param name="end">Конечная ячейка</param>
        </member>
        <member name="T:Game.Extension.GameTextures">
            <summary>
            Класс расширения
            Работа с текстурами (загрузка)
            </summary>
        </member>
        <member name="M:Game.Extension.GameTextures.loadImage(System.String)">
            <summary>
            Загрузка изображения для текстур
            </summary>
            <param name="url">Путь до текстуры</param>
            <returns>возвращает данные загруженного для текстуры изображения </returns>
        </member>
        <member name="M:Game.Extension.GameTextures.MakeGlTexture(System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Связывание текстуры
            </summary>
            <param name="Format">Формат создаваемой текстуры</param>
            <param name="pixels">Указатель на данные изображения</param>
            <param name="w">Ширина изображения</param>
            <param name="h">Высота изображения</param>
            <returns>Возвращает связанную текстуру в виде uint</returns>
        </member>
        <member name="T:Game.Extension.WorkWithTime">
            <summary>
            Класс расширения
            Работа со временем
            </summary>
        </member>
        <member name="M:Game.Extension.WorkWithTime.IsNight(System.Int32)">
            <summary>
            Определяет текущее время суток
            </summary>
            <param name="hour">Часы, для определения времени суток</param>
            <returns>Возвращает true если ночь, день — false</returns>
        </member>
        <member name="M:Game.Extension.WorkWithTime.TimesOfDay(System.Int32,System.Int32)">
            <summary>
            Определяет, сменилось ли время суток
            </summary>
            <param name="hourBefore">Часы до события</param>
            <param name="hourAfter">Часы после события</param>
            <returns></returns>
        </member>
        <member name="M:Game.Extension.WorkWithTime.SubTotalTimeCountingForWay(System.Collections.Generic.List{System.Drawing.Point},System.DateTime,System.Drawing.Point,Game.Models.Net,System.Int32)">
            <summary>
            Подсчет времени по пути, пройденным персонажем
            </summary>
            <param name="way">Путь персонажа</param>
            <param name="dayTime">Текущее время суток</param>
            <param name="beginRenderNet"></param>
            <param name="net">Сетка, по которой передвигается персонаж</param>
            <param name="dayTimeTick">Модификатор времени суток</param>
            <returns>Возвращает число минут — затраченное персонажем на прохождение данного пути</returns>
        </member>
        <member name="T:Game.Extension.GameControl">
            <summary>
            Класс расширения 
            Алгоритм нахождения кратчайшего расстояния между двумя точками — A*
            </summary>
        </member>
        <member name="M:Game.Extension.GameControl.FindPath(Game.Enums.TypeOfCell[0:,0:],System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Int32)">
            <summary>
            Основной метод вычисления маршрута, кратчайшего пути
            </summary>
            <param name="cellsOfNet">Исходная сетка, на которой ищей кратчайший путь</param>
            <param name="start">Клетка, от которой начинаем поиск пути</param>
            <param name="goal">Клетка, до которой ищем путь</param>
            <param name="BeginNet">Начальное положение отображаемой сетки</param>
            <param name="scale">Масштаб отображаемой области, на которой ищется кратчайший путь</param>
            <returns>Возвращает найденный путь, список вершин</returns>
        </member>
        <member name="M:Game.Extension.GameControl.OptimizedFindPath(System.Collections.Generic.List{System.Drawing.Point},Game.Enums.TypeOfCell[0:,0:],System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Int32)">
            <summary>
            Основной метод вычисления маршрута, кратчайшего пути
            </summary>
            <param name="previousWay">Предыдущий найденный путь</param>
            <param name="cellsOfNet">Исходная сетка, на которой ищей кратчайший путь</param>
            <param name="start">Клетка, от которой начинаем поиск пути</param>
            <param name="goal">Клетка, до которой ищем путь</param>
            <param name="BeginNet">Начальное положение отображаемой сетки</param>
            <param name="scale">Масштаб отображаемой области, на которой ищется кратчайший путь</param>
            <returns>Возвращает найденный путь, список вершин</returns>
        </member>
        <member name="T:Game.Models.PathNode">
            <summary>
            Структура, используемая в алгоритме A*
            </summary>
        </member>
        <member name="P:Game.Models.PathNode.Position">
            <summary>
            Координаты точки на карте. 
            </summary>
        </member>
        <member name="P:Game.Models.PathNode.PathLengthFromStart">
            <summary>
            Длина пути от старта (G). 
            </summary>
        </member>
        <member name="P:Game.Models.PathNode.CameFrom">
            <summary>
            Точка, из которой пришли в эту точку. 
            </summary>
        </member>
        <member name="P:Game.Models.PathNode.HeuristicEstimatePathLength">
            <summary>
            Примерное расстояние до цели (H).
            </summary>
        </member>
        <member name="P:Game.Models.PathNode.EstimateFullPathLength">
            <summary>
            Ожидаемое полное расстояние до цели (F).
            </summary>
        </member>
        <member name="T:Game.Models.Net">
            <summary>
            Класс сетки, на котоой отображаются объекты
            </summary>
        </member>
        <member name="P:Game.Models.Net.CellsOfNet">
            <summary>
            Сетка
            </summary>
        </member>
        <member name="P:Game.Models.Net.N">
            <summary>
            Размерность сетки
            </summary>
        </member>
        <member name="P:Game.Models.Net.finish">
            <summary>
            Финишная клетка
            </summary>
        </member>
        <member name="M:Game.Models.Net.#ctor">
            <summary>
            Конструктор сетки, генерирование препятствий
            </summary>
        </member>
        <member name="P:Game.Models.Net.Item(System.Int32,System.Int32)">
            <summary>
            Перегрузка индексатора
            </summary>
            <param name="i">Абсцисса клетки</param>
            <param name="j">Ордината клетки</param>
            <returns></returns>
        </member>
        <member name="M:Game.Models.Net.BeginPointForCentering(System.Drawing.Point,System.Drawing.Point,System.Int32)">
            <summary>
            Перемещение начала отобраемой части сетки
            </summary>
            <param name="currentClickNet">Текущая точка</param>
            <param name="beginRenderNet">Предыдущая точка начала отображаемой сетки</param>
            <param name="scale">Масштаб отображаемой части сетки</param>
            <returns>Возвращает точку начала отобраемой части сетки</returns>
        </member>
        <member name="M:Game.Models.Net.GenerateGlobalNet(System.Int32)">
            <summary>
            Генерирование объектов на сетке
            </summary>
            <param name="N">Размерность сетки</param>
        </member>
        <member name="M:Game.Models.Net.IsNearLamp(System.Drawing.Point)">
            <summary>
            Проверка на нахождение около фонаря 
            </summary>
            <param name="pers">Координаты персонажа на сетке</param>
            <returns>true — если персонаж недалеко от сетки, иначе false</returns>
        </member>
        <member name="M:Game.Models.Net.IsBlock(System.Drawing.Point)">
            <summary>
            Проверка клетки сетки на препятствие
            </summary>
            <param name="pointNet">Проверяемая клетка</param>
            <returns>true — если клетка block, иначе false</returns>
        </member>
        <member name="M:Game.Models.Net.IsFree(System.Drawing.Point)">
            <summary>
            Проверка, свободна ли клетка
            </summary>
            <param name="pointNet">Проверяемая клетка</param>
            <returns>true — если клетка свободна, иначе false</returns>
        </member>
        <member name="M:Game.Models.Net.IsLamp(System.Drawing.Point)">
            <summary>
            Проверка, является ли клетка факелом
            </summary>
            <param name="pointNet">Проверяемая клетка</param>
            <returns>true — если клетка факел, иначе false</returns>
        </member>
        <member name="M:Game.Models.Net.Lamp(System.Drawing.Point)">
            <summary>
            Создает факел в указанной клетке
            </summary>
            <param name="beginNet">Клетка,в которой создается факел</param>
        </member>
        <member name="M:Game.Form1.ArrowDirection(System.Windows.Forms.PictureBox,System.Drawing.Point,System.Drawing.Point,System.Int32)">
            <summary>
            Отображение направления от заданной точки к финишу
            </summary>
            <param name="box">Область отображения стрелки</param>
            <param name="Man">Текущее положение</param>
            <param name="Finish">Финишная точка</param>
            <param name="N">Размерность сетки, на которой происходит расчет, необходим для нормирования значений</param>
        </member>
        <member name="M:Game.Form1.#ctor">
            <summary>
            Инициализация объектов отрисовки, сетки с объектами, текстур и времени
            </summary>
        </member>
        <member name="M:Game.Form1.OutMessageBox(System.String,System.String)">
            <summary>
            Вывод сообщения окна сообщений с параметрами
            </summary>
            <param name="message">Само сообщение</param>
            <param name="caption">Заголовок окна</param>
        </member>
        <member name="F:Game.Form1.components">
            <summary>
            Обязательная переменная конструктора.
            </summary>
        </member>
        <member name="M:Game.Form1.Dispose(System.Boolean)">
            <summary>
            Освободить все используемые ресурсы.
            </summary>
            <param name="disposing">истинно, если управляемый ресурс должен быть удален; иначе ложно.</param>
        </member>
        <member name="M:Game.Form1.InitializeComponent">
            <summary>
            Требуемый метод для поддержки конструктора — не изменяйте 
            содержимое этого метода с помощью редактора кода.
            </summary>
        </member>
        <member name="M:Game.Program.Main">
            <summary>
            Главная точка входа для приложения.
            </summary>
        </member>
        <member name="T:Game.Properties.Resources">
            <summary>
              Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
            </summary>
        </member>
        <member name="P:Game.Properties.Resources.ResourceManager">
            <summary>
              Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
            </summary>
        </member>
        <member name="P:Game.Properties.Resources.Culture">
            <summary>
              Перезаписывает свойство CurrentUICulture текущего потока для всех
              обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
            </summary>
        </member>
    </members>
</doc>
